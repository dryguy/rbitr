% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/tabulate_positionlog.R
\name{tabulate_positionlog}
\alias{tabulate_positionlog}
\title{Create a data frame containing engine analysis of a single chess position}
\usage{
tabulate_positionlog(
  positionlog,
  all_tags = FALSE,
  custom_tags = NULL,
  delete_blank_lines = TRUE
)
}
\arguments{
\item{positionlog}{A character vector that contains engine analysis.}

\item{all_tags}{(Default = \code{FALSE}) A Boolean. Setting \code{all_tags} = TRUE will
search for all of the tags listed in the UCI protocol.}

\item{custom_tags}{(Default = \code{NULL}) An optional character vector of custom
tag names.}

\item{delete_blank_lines}{(Default = \code{TRUE}) A Boolean. Setting this value to
FALSE will leave blank rows/columns intact.}
}
\value{
A data frame with character columns summarizing the data for the
position.
}
\description{
The \code{tabulate_positionlog()} function takes a character vector of engine
analysis for a single chess position and condenses it into a data frame for
easier access.
}
\details{
The \code{tabulate_positionlog()} function tabulates data from a
\href{https://github.com/fsmosca/UCIChessEngineProtocol}{UCI-compatible} chess
engine and returns it as a data frame. Data sent by the engine may include
the best move, the principal variations, the current depth of search, the
number of nodes searched, and so on. The data are marked in the output by
tags such as \code{depth}, \code{pv}, and \code{score}. The tags will appear in the data
frame as column names.

For a list of tags that can appear, refer to the
\href{https://github.com/fsmosca/UCIChessEngineProtocol}{UCI} protocol. Some
engines may also provide information that is not covered by the UCI
protocol.

By default, the only data extracted are \code{depth}, \code{multipv}, \code{score}, and
\code{pv}. The \code{custom_tags} parameter allows the user to choose additional tags
to extract. Setting the \code{all_tags} parameter to \code{TRUE} will extract all of
the tags listed in the UCI protocol.

The \code{custom_tags} parameter may also be used for engines that supply data
not covered by the UCI protocol, but \emph{only} if the engine's custom tags
conform to one of the following formats:
\itemize{
\item \if{html}{\out{<tag name>}} \if{html}{\out{<tag value>}}
\item \if{html}{\out{<tag name>}} <move 1> <move 2> ... \if{html}{\out{<move i>}}
}

where \if{html}{\out{<tag name>}}, \if{html}{\out{<tag value>}}, and \if{html}{\out{<move i>}} are space delimited, and must
not contain spaces themselves. Additionally, moves must be in the UCI LAN
format. Each \if{html}{\out{<move i>}} should consist of two chessboard squares followed by
an optional promotion piece, e.g. e2e4 or e7e8q.

When requested data is not found, \code{NA} will appear to indicate missing
values. If entire rows or columns are missing, they will be deleted. To
leave missing rows/columns in place, set the \code{delete_blank_lines} parameter
to \code{FALSE.}
}
\note{
\code{tabulate_positionlog()} does not change the class of the data it
returns. Since the \code{positionlog} parameter is a character vector, the
function will return a data frame with character columns.
}
\examples{
positionlog <- c(
  "info depth 1 seldepth 1 multipv 1 score cp 13 nodes 20 nps 20000 tbhits 0 time 1 pv e2e4",
  "info depth 2 seldepth 2 multipv 1 score cp 14 nodes 40 nps 40000 tbhits 0 time 1 pv e2e4 e7e5",
  "bestmove e2e4 ponder e7e5"
)
tabulate_positionlog(positionlog)
}
\seealso{
The 'tabulate' functions tabulate analysis logs into data frames.
\itemize{
\item \code{\link[=tabulate_positionlog]{tabulate_positionlog()}} for condensing analysis of one position.
\item \code{\link[=tabulate_gamelog]{tabulate_gamelog()}} for condensing analysis of one game.
\item \code{\link[=tabulate_pgnlog]{tabulate_pgnlog()}} for condensing analysis of an entire pgn file.
}

The 'parse' functions extract specific data from analysis logs.
\itemize{
\item \code{\link[=parse_gamelog]{parse_gamelog()}} for extracting data from one evaluated game.
\item \code{\link[=parse_pgnlog]{parse_pgnlog()}} for extracting data from games in a pgn.
}

The 'evaluate' functions produce analysis logs.
\itemize{
\item \code{\link[=evaluate_position]{evaluate_position()}} for analyzing chess positions.
\item \code{\link[=evaluate_game]{evaluate_game()}} for analyzing individual games.
\item \code{\link[=evaluate_pgn]{evaluate_pgn()}} for evaluating all the games in a PGN file.
}
}
