% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/engine_tools.R
\name{evaluate_position}
\alias{evaluate_position}
\title{Evaluate a Chess Position}
\usage{
evaluate_position(position, engine, n_pv, depth)
}
\arguments{
\item{position}{A single-element character vector of chess moves in long
algebraic notation (LAN).}

\item{engine}{An engine handler generated by \code{bigchess::uci_engine()}.}

\item{n_pv}{A single-element integer vector of the desired number of
principal variations.}

\item{depth}{A single-element integer vector of the desired search depth, in
plies.}
}
\value{
The output of the chess engine as a character vector.
}
\description{
Send a chess position to a chess engine for evaluation
}
\details{
The rbitr package relies on the bigchess package to handle the
interface with a Universal Chess Interface (UCI) compatible chess engine. An
engine handler must be created with \code{bigchess::uci_engine()} and passed to
the \code{evaluate_position()} function (see examples). See
wbec-ridderkerk.nl/html/UCIProtocol.html for details of the UCI protocol.

Positions should be in long algebraic notation (LAN). The
\code{get_positions()} command will convert the movetext string from a pgn into a
series of positions in LAN, which can then be fed to \code{evaluate_position()}.
}
\examples{
library(bigchess)
position <- 'e2e4 g7g5 b1c3'
engine_path <- '../../stockfish_13_win_x64_bmi2.exe'
engine <- uci_engine(engine_path)
evaluate_position(position, engine, n_pv = 1, depth = 1)
}
\concept{engine tools}
