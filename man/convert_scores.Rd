% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/convert_scores.R
\name{convert_scores}
\alias{convert_scores}
\title{Convert mates and bounds to numeric values}
\usage{
convert_scores(scores, mate = 5000)
}
\arguments{
\item{scores}{A character vector of scores from a
\href{http://wbec-ridderkerk.nl/html/UCIProtocol.html}{UCI compatible} chess
engine.}

\item{mate}{(Default = 5000) A single-element integer vector of the value to
use for 'mate x'.}
}
\value{
An numeric vector of scores (in centipawns).
}
\description{
A function to convert "mate x", "x upperbound", and "x lowerbound" into
numeric values (in centipawns).
}
\details{
\href{http://wbec-ridderkerk.nl/html/UCIProtocol.html}{UCI compatible}
chess engines return positional evaluations in centipawns. The UCI protocol
also allows for evaluations to be expressed as upper or lower bounds. In
positions where the engine finds a mate in some number of moves, the
evaluation is given as "mate x" instead of a centipawn value. In addition,
the UCI convention is that scores for white are given with the opposite
sign from the scores for black (\emph{i.e.}, a positive score for black means
black is ahead, while a positive score for white means white is ahead.)

The function \code{convert_scores()} will convert bounds or mates into
numeric values. Values of "x upperbound" or "x lowerbound" will simply be
converted to the numeric value of x. Values of "mate x" will be converted
to the value specified by the mate parameter, in centipawns. The sign of
black's scores will be reversed from the UCI convention, so that positive
evaluations will always mean white is ahead, and negative will always mean
black is ahead. The final scores will be returned as an integer vector.
}
\note{
The function \code{convert_scores()} assumes that the scores begin with a
position where white is to move.
}
\examples{
scores <- c("90", "-26", "26 upperbound", "mate 1", "mate -1", "mate 0", NA)
convert_scores(scores)
}
\seealso{
\code{\link[=parse_gamelog]{parse_gamelog()}} to extract scores from engine output.
}
