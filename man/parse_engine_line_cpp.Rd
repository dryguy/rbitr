% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/RcppExports.R
\name{parse_engine_line_cpp}
\alias{parse_engine_line_cpp}
\title{Parse a line of UCI chess engine output}
\usage{
parse_engine_line_cpp(engine_line, tag_names)
}
\arguments{
\item{engine_line}{A single-element character vector of the engine line to be parsed.}

\item{tag_names}{A character vector of tag names to extract from the engine line.}
}
\value{
A character vector of tag values corresponding to the input tag names.
}
\description{
Parse a line of UCI chess engine output
}
\details{
The \code{parse_engine_line_cpp()} function is optimized for speed for
large data sets. Input validation should therefore be handled by a parent
function. The function is written in C++ via the \code{Rcpp} package.

The \code{parse_engine_line_cpp()} function takes two arguments: a
character vector of length one representing a single line of UCI engine
output, and a character vector containing the tag names to extract from
the engine line. It will return a character vector of tag values
corresponding to the input tag names. Anywhere a tag is not present, it
will return NA.

The \href{https://github.com/fsmosca/UCIChessEngineProtocol}{UCI}
protocol lists a number of tags that may appear in engine output. Most tags
have values that are either numeric, or that are a series of chess moves in
long algebraic notation (LAN):\if{html}{\out{<br>}}
    Numeric tags: depth, seldepth, multipv, time, nodes, currmovenumber,
hashfull, nps, tbhits, sbhits, cpuload\if{html}{\out{<br>}}
    Move tags: bestmove, ponder, pv, currmove, refutation\if{html}{\out{<br>}}
    Special tags: score, string, currline

In the case of move tags, \code{parse_engine_line_cpp()} will check for the
next move until it reaches the end of the series, and return the moves as a
string separated by spaces.

The tags \code{score}, \code{string}, and \code{currline} differ from the rest.

The \code{score} tag has 4 different types of value (\verb{<x>} indicates numeric):\if{html}{\out{<br>}}
    cp: A score (centipawns), 'cp \verb{<x>}'\if{html}{\out{<br>}}
    mate: Moves until mate, 'mate \verb{<x>}'\if{html}{\out{<br>}}
    lowerbound: A lower bound for the score (centipawns), '\verb{<x>} lowerbound'\if{html}{\out{<br>}}
    upperbound: An upper bound for the score (centipawns), '\verb{<x>} upperbound'\if{html}{\out{<br>}}

The \code{string} tag can have any value, and it runs to the end of the line.

The \code{currline} tag has a slightly different format than the other move tags.
The moves may be preceded by a number indicating which cpu generated the
moves. In the case of only 1 cpu, the number may be omitted.

Some engines may use tags not listed in the UCI protocol. The
\code{parse_engine_line_cpp()} function may be able to deal with such tags if
they conform to the general format of other UCI tags.
}
