% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/evaluate_game.R
\name{evaluate_game}
\alias{evaluate_game}
\title{Analyze a chess game}
\usage{
evaluate_game(movetext, engine_path, limiter, limit, n_cpus = 1L, n_pv = 1L)
}
\arguments{
\item{movetext}{A single-element character vector containing a sequence of
moves in standard algebraic notation (SAN).}

\item{engine_path}{A single-element character vector of the path to a UCI
chess engine.}

\item{limiter}{A single-element character vector indicating the desired
mode of search termination. Allowed values are 'depth' (to search a fixed
number of plies), 'nodes' (to search a fixed number of nodes), and
'movetime' (to search a fixed number of milliseconds).}

\item{limit}{A single-element integer vector of the desired search depth
(# of plies), search nodes (# of nodes), or search time (# of mseconds).}

\item{n_cpus}{(Default = 1) A single-element integer vector of the number of
cpus to use.}

\item{n_pv}{(Default = 1) A single-element integer vector of the desired
number of principal variations.}
}
\value{
A list containing character vectors of the engine output. Each
element in the list corresponds to a position in the game, beginning with
the initial position before any move has been made.
}
\description{
Chess games are analyzed using a
\href{http://wbec-ridderkerk.nl/html/UCIProtocol.html}{UCI compatible} chess
engine.
}
\details{
The rbitr package relies on the
\href{https://github.com/rosawojciech/bigchess}{bigchess} package to handle the
interfaces to
\href{http://wbec-ridderkerk.nl/html/UCIProtocol.html}{Universal Chess Interface (UCI)}
compatible chess engines. To use \code{evaluate_game()}, an engine handler must
first be created with the bigchess \code{uci_engine()} function, and the handler
must then be passed to \code{evaluate_game()} (see example).

The game to be analyzed should be in a pgn-compatible format, that
is, moves should be in standard algebraic notation (SAN) and any comments,
annotations, or variations should comply with the
\href{http://www.saremba.de/chessgml/standards/pgn/pgn-complete.htm}{pgn specification}.
If variations are present, they will not be analyzed. The game is passed
into \code{evaluate_game()} as a single-element character vector via the
movetext parameter. The movetext is typically obtained from \code{get_pgn()},
where it would be found in the $Movetext column of \code{get_pgn()}'s output.

The number of principal variations to be analyzed is set using the
n_pv parameter, while the depth of analysis is controlled by choosing a
UCI command to set the criteria for search termination as either 'depth'
(to search a fixed  number of plies), 'nodes' (to search a fixed number of
positions), or 'movetime' (to search a fixed number of milliseconds). The
selection is controlled by the limiter and limit parameters. Note
that the values apply to each position analyzed. For example, if the game
has 80 plies, and 'movetime' is set to 1000 milliseconds, the analysis will
take 80 seconds.
}
\note{
The server analysis on lichess.org use a limit of 2250000 nodes. To
mimic this, set limiter = 'nodes', and limit = 2250000.
}
\examples{
library(bigchess)
movetext <- '1. e4 g5 2. Nc3 f5 3. Qh5# 1-0'
# Modify engine_path as required for your engine location & operating system
engine_path <- '//stockfish_13_win_x64_bmi2.exe'
evaluate_game(movetext, engine_path, n_pv = 1, limiter = 'depth', limit = 1)
}
