% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/cram_pgnlog.R
\name{cram_pgnlog}
\alias{cram_pgnlog}
\title{Creates a list of data frames containing analyses of chess games}
\usage{
cram_pgnlog(
  pgnlog,
  all_tags = FALSE,
  custom_tags = NULL,
  delete_blank_lines = TRUE
)
}
\arguments{
\item{pgnlog}{A list of gamelogs from rbitr's \code{evaluate_pgn()} function.}

\item{all_tags}{(Default = FALSE) A boolean. Setting \code{all_tags} = TRUE will
search for all of the info tags listed in the UCI protocol}

\item{custom_tags}{(Default = NULL) An optional character vector of custom
tag names for tags not in the UCI protocol}

\item{delete_blank_lines}{(Default = TRUE) A boolean. Setting this value to
FALSE will leave blank rows/columns intact}
}
\value{
A list of data frames containing condensed analyses of chess games.
}
\description{
The function \code{cram_pgnlog()}  takes a list of engine analyses for chess games
and condenses them into data frames for easier access.
}
\details{
\code{cram_pgnlog()} condenses analyses from a
\href{https://github.com/fsmosca/UCIChessEngineProtocol}{UCI}-compatible chess
engine that have been produced using the \code{evaluate_pgn()} function.

\code{cram_pgnlog()} is a wrapper for \code{cram_gamelog()} that loops
over each game analysis in the pgnlog and creates a data frame containing
the condensed analysis data. The \code{pgnlog} parameter should contain output
from the \code{evaluate_pgn()} function. The remaining parameters are passed to
\code{cram_gamelog()}. See the documentation for \code{\link[=cram_positionlog]{cram_positionlog()}} and
\code{\link[=cram_gamelog]{cram_gamelog()}} for details.
}
\examples{
pgnlog <- list(list(c(
"Stockfish 13 by the Stockfish developers (see AUTHORS file)",
"readyok",
"info string NNUE evaluation using nn-62ef826d1a6d.nnue enabled",
"info depth 1 seldepth 1 multipv 1 score cp 146 nodes 30 nps 30000 tbhits 0 time 1 pv d2d4",
"bestmove d2d4"
)))
cram_pgnlog(pgnlog)
}
\seealso{
The 'cram' functions condense analysis logs into data frames.
\itemize{
\item \code{\link[=cram_positionlog]{cram_positionlog()}} for condensing analysis of one position.
\item \code{\link[=cram_gamelog]{cram_gamelog()}} for condensing analysis of one game.
}

The 'parse' functions extract specific data from analysis logs.
\itemize{
\item \code{\link[=parse_gamelog]{parse_gamelog()}} for extracting data from one evaluated game.
\item \code{\link[=parse_pgnlog]{parse_pgnlog()}} for extracting data from games in a pgn.
}

The 'evaluate' functions produce analysis logs.
\itemize{
\item \code{\link[=evaluate_position]{evaluate_position()}} for analyzing chess positions.
\item \code{\link[=evaluate_game]{evaluate_game()}} for analyzing individual games.
\item \code{\link[=evaluate_pgn]{evaluate_pgn()}} for evaluating all the games in a PGN file.
}
}
