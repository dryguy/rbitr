% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/engine_tools.R
\name{evaluate_positions}
\alias{evaluate_positions}
\title{Evaluate Chess Positions}
\usage{
evaluate_positions(positions, engine, n_pv, depth)
}
\arguments{
\item{positions}{A character vector of chess positions in long algebraic
notation (LAN).}

\item{engine}{An engine handler generated by the bigchess function
\code{uci_engine()}.}

\item{n_pv}{A single-element integer vector of the desired number of
principal variations.}

\item{depth}{A single-element integer vector of the desired search depth, in
plies.}
}
\value{
A character vector of the engine output.
}
\description{
Send chess positions to a chess engine for evaluation.
}
\details{
The rbitr package relies on the
\href{https://github.com/rosawojciech/bigchess}{bigchess} package to handle the
interfaces to Universal Chess Interface (UCI) compatible chess engines. An
engine handler must be created with the bigchess \code{uci_engine()} function, and
the handler must then be passed to rbitr's \code{evaluate_positions()} function
(see examples). See
\href{http://wbec-ridderkerk.nl/html/UCIProtocol.html}{the UCI protocol} for
details of UCI engine output.

Positions should be in long algebraic notation (LAN). Games recorded
in standard algebraic notation (SAN) can be converted to a series of
positions in LAN using rbitr's \code{get_positions()} function, which can then
be fed to \code{evaluate_positions()}.
}
\examples{
library(bigchess)
position <- 'e2e4 g7g5 b1c3'
# Modify the next line as required for your UCI engine & operating system
engine_path <- '../../stockfish_13_win_x64_bmi2.exe'
engine <- uci_engine(engine_path)
evaluate_positions(position, engine, n_pv = 1, depth = 1)
uci_quit(engine)
}
\seealso{
Other engine tools: 
\code{\link{get_scores}()}
}
\concept{engine tools}
