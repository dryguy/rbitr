% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/cram_gamelog.R
\name{cram_gamelog}
\alias{cram_gamelog}
\title{Creates a data frame containing engine analysis of a chess game}
\usage{
cram_gamelog(
  gamelog,
  all = FALSE,
  patterns = NULL,
  column_names = NULL,
  delete_blank_lines = TRUE
)
}
\arguments{
\item{gamelog}{A list of vectors of engine analysis}

\item{all}{(Default = FALSE) A boolean. Setting \code{all} = TRUE will search for
all of the info tokens listed in the UCI protocol}

\item{patterns}{(Default = NULL) An optional character vector of one or more
user-supplied regular expressions}

\item{column_names}{(Default = NULL) An optional character vector of column
names for data extracted by the user-supplied regular expressions}

\item{delete_blank_lines}{(Default = TRUE) A boolean. Setting this value to
FALSE will leave blank rows/columns intact}
}
\value{
A data frame summarizing the data for the game
}
\description{
The \code{cram_gamelog()} function takes a list of vectors of engine
analysis for a chess game and condenses it into a data frame for
easier access.
}
\details{
The function \code{cram_gamelog()} parses output from a
\href{https://github.com/fsmosca/UCIChessEngineProtocol}{UCI}-compatible chess
engine.

\code{cram_gamelog()} is a wrapper for \code{cram_positionlog()} that loops
over each position in the game, and adds a column indicating the position
number. The \code{gamelog} parameter should contain output from the
\code{evaluate_game()} function. The remaining parameters are passed to
\code{cram_positionlog()}. See the documentation for \code{\link[=cram_positionlog]{cram_positionlog()}}
for details.
}
\examples{
gamelog <- list(c(
  "Stockfish 13 by the Stockfish developers (see AUTHORS file)",
  "readyok",
  "info string NNUE evaluation using nn-62ef826d1a6d.nnue enabled",
  "info depth 1 seldepth 1 multipv 1 score cp 146 nodes 30 nps 30000 tbhits 0 time 1 pv d2d4",
  "bestmove d2d4"
))
cram_gamelog(gamelog)
}
\seealso{
The 'cram' functions condense analysis logs into data frames.
\itemize{
\item \code{\link[=cram_positionlog]{cram_positionlog()}} for condensing analysis of one position.
\item \code{\link[=cram_pgnlog]{cram_pgnlog()}} for condensing analysis of an entire pgn file.
}

The 'parse' functions extract specific data from analysis logs.
\itemize{
\item \code{\link[=parse_gamelog]{parse_gamelog()}} for extracting data from one evaluated game.
\item \code{\link[=parse_pgnlog]{parse_pgnlog()}} for extracting data from games in a pgn.
}

The 'evaluate' functions produce analysis logs.
\itemize{
\item \code{\link[=evaluate_position]{evaluate_position()}} for analyzing chess positions.
\item \code{\link[=evaluate_game]{evaluate_game()}} for analyzing individual games.
\item \code{\link[=evaluate_pgn]{evaluate_pgn()}} for evaluating all the games in a PGN file.
}
}
